template: Hello, %s!

#defaultName: Stranger
defaultName: ${DW_DEFAULT_NAME:-Stranger}

# use the simple server factory if you only want to run on a single port
server:
  type: simple
  rootPath: /*
  applicationContextPath: /api
  adminContextPath: /admin
  connector:
    type: http
    port: 8080
  
  # The maximum number of requests to queue before blocking the acceptors.
  maxQueuedRequests: 1024 # 1024 is default


logging:
  level: INFO
  loggers:
    com.nikolas.master_thesis: DEBUG

  appenders:
    # - type: file
    #   currentLogFilename: /home/nikola/Documents/DWApp-LOGs/DW-Bookshop_LOG.log
    #   threshold: ALL
    #   queueSize: 15024
    #   archive: true
    #   archivedLogFilenamePattern: /home/nikola/Documents/DWApp-LOGs/DW-Bookshop_LOG-%d.log
    #   archivedFileCount: 5
    #   discardingThreshold: 0
    #   timeZone: UTC+2
    #   logFormat: "%-5p [%d{ISO8601,UTC+2}] %c: %m%n%rEx"
      # logFormat:  "%h %l %u [%t] '%r' %s %b referer '%i{Referer}' '%i{User-Agent}' \n"
      # logFormat: "%h %l %u %t \"%r\" %>s %b"      
      # logFormat: "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"" combined      

      # bufferSize: 8KB
      # immediateFlush: true
      # filterFactories:
      #   - type: URI
    
    - type: console
      threshold: ALL
      queueSize: 15024
      discardingThreshold: 0
      timeZone: UTC+2
      target: stdout
      logFormat: "%-5p [%d{ISO8601,UTC+2}] %c: %m%n%rEx"


database:
  driverClass: org.postgresql.Driver # the name of your JDBC driver
  user: postgres # username
  password: postgres # password
  url: jdbc:postgresql://localhost:5432/dw_app_db

  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8
    hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 5s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  validationQueryTimeout: 3s # the timeout before a connection validation queries fail
  initialSize: 2 
  minSize: 2 # the minimum number of connections to keep open
  maxSize: 10   # the maximum number of connections to keep open
  checkConnectionWhileIdle: false # whether or not idle connections should be validated

  # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
  evictionInterval: 10s

  # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
  minIdleTime: 1 minute
  